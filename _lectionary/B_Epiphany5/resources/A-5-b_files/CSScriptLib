// -- Adobe GoLive JavaScript Library
// -- Global Functions
function CSScriptInit() {
if(typeof(skipPage) != "undefined") { if(skipPage) return; }
idxArray = new Array;
for(var i=0;i<CSInit.length;i++)
	idxArray[i] = i;
CSAction2(CSInit, idxArray);
}
CSInit = new Array;
CSExit = new Array;
CSStopExecution=false;
function CSAction(array) {return CSAction2(CSAct, array);}
function CSAction2(fct, array) { 
	var result;
	for (var i=0;i<array.length;i++) {
		if(CSStopExecution) return false; 
		var aa = fct[array[i]];
		if (aa == null) return false;
		var ta = new Array;
		for(var j=1;j<aa.length;j++) {
			if((aa[j]!=null)&&(typeof(aa[j])=="object")&&(aa[j].length==2)){
				if(aa[j][0]=="VAR"){ta[j]=CSStateArray[aa[j][1]];}
				else{if(aa[j][0]=="ACT"){ta[j]=CSAction(new Array(new String(aa[j][1])));}
				else ta[j]=aa[j];}
			} else ta[j]=aa[j];
		}			
		result=aa[0](ta);
	}
	return result;
}
CSAct = new Object;
CSIm=new Object();
function CSIShow(n,i) {
	if (document.images) {
		if (CSIm[n]) {
			var img=CSGetImage(n);
			if (img&&typeof(CSIm[n][i].src)!="undefined") {img.src=CSIm[n][i].src;}
			if(i!=0) self.status=CSIm[n][3]; else self.status=" ";
			return true;
		}
	}
	return false;
}
function CSILoad(action) {
	im=action[1];
	if (document.images) {
		CSIm[im]=new Object();
		for (var i=2;i<5;i++) {
			if (action[i]!='') {CSIm[im][i-2]=new Image(); CSIm[im][i-2].src=action[i];}
			else CSIm[im][i-2]=0;
		}
		CSIm[im][3] = action[5];
	}
}
function CSClickReturn () {
	var bAgent = window.navigator.userAgent; 
	var bAppName = window.navigator.appName;
	if ((bAppName.indexOf("Explorer") >= 0) && (bAgent.indexOf("Mozilla/3") >= 0) && (bAgent.indexOf("Mac") >= 0))
		return true; // dont follow link
	else return false; // dont follow link
}
function CSButtonReturn () { return !CSClickReturn(); }
CSAg = window.navigator.userAgent; CSBVers = parseInt(CSAg.charAt(CSAg.indexOf("/")+1),10);
CSIsW3CDOM = ((document.getElementById) && !(IsIE()&&CSBVers<6)) ? true : false;
function IsIE() { return CSAg.indexOf("MSIE") > 0;}
function CSIEStyl(s) { return document.all.tags("div")[s].style; }
function CSNSStyl(s) { if (CSIsW3CDOM) return document.getElementById(s).style; else return CSFindElement(s,0);  }
CSIImg=false;
function CSInitImgID() {if (!CSIImg && document.images) { for (var i=0; i<document.images.length; i++) { if (!document.images[i].id) document.images[i].id=document.images[i].name; } CSIImg = true;}}
function CSFindElement(n,ly) { if (CSBVers<4) return document[n];
	if (CSIsW3CDOM) {CSInitImgID();return(document.getElementById(n));}
	var curDoc = ly?ly.document:document; var elem = curDoc[n];
	if (!elem) {for (var i=0;i<curDoc.layers.length;i++) {elem=CSFindElement(n,curDoc.layers[i]); if (elem) return elem; }}
	return elem;
}
function CSGetImage(n) {if(document.images) {return ((!IsIE()&&CSBVers<5)?CSFindElement(n,0):document.images[n]);} else {return null;}}
CSDInit=false;
function CSIDOM() { if (CSDInit)return; CSDInit=true; if(document.getElementsByTagName) {var n = document.getElementsByTagName('DIV'); for (var i=0;i<n.length;i++) {CSICSS2Prop(n[i].id);}}}
function CSICSS2Prop(id) { var n = document.getElementsByTagName('STYLE');for (var i=0;i<n.length;i++) { var cn = n[i].childNodes; for (var j=0;j<cn.length;j++) { CSSetCSS2Props(CSFetchStyle(cn[j].data, id),id); }}}
function CSFetchStyle(sc, id) {
	var s=sc; while(s.indexOf("#")!=-1) { s=s.substring(s.indexOf("#")+1,sc.length); if (s.substring(0,s.indexOf("{")).toUpperCase().indexOf(id.toUpperCase())!=-1) return(s.substring(s.indexOf("{")+1,s.indexOf("}")));}
	return "";
}
function CSGetStyleAttrValue (si, id) {
	var s=si.toUpperCase();
	var myID=id.toUpperCase()+":";
	var id1=s.indexOf(myID);
	if (id1==-1) return "";
	s=s.substring(id1+myID.length+1,si.length);
	var id2=s.indexOf(";");
	return ((id2==-1)?s:s.substring(0,id2));
}
function CSSetCSS2Props(si, id) {
	var el=document.getElementById(id);
	if (el==null) return;
	var style=document.getElementById(id).style;
	if (style) {
		if (style.left=="") style.left=CSGetStyleAttrValue(si,"left");
		if (style.top=="") style.top=CSGetStyleAttrValue(si,"top");
		if (style.width=="") style.width=CSGetStyleAttrValue(si,"width");
		if (style.height=="") style.height=CSGetStyleAttrValue(si,"height");
		if (style.visibility=="") style.visibility=CSGetStyleAttrValue(si,"visibility");
		if (style.zIndex=="") style.zIndex=CSGetStyleAttrValue(si,"z-index");
	}
}
// -- Action Functions
// DatePage.action v1.4.1 - January, 2005
// © 1999, Walter Blady
// All rights reserved
var DPisIE3 = navigator.appVersion.indexOf("MSIE 3") != -1;
var DPisIE = navigator.appVersion.indexOf("MSIE") != -1;
var DPW3C = document.getElementById ? true : false;
var DPNewWind, DPAction;
function WBDatePage(action) {
	if (DPVersion()) {
		DPAction = action;
		var thisDate = new Date(), fromDate, testDate, duration;
		var thisHour = thisDate.getHours();
		var thisMinute = thisDate.getMinutes();
		var thisSecond = thisDate.getSeconds();
		thisDate = Date.parse(thisDate);
		var url = "";
		for (var i = 17; i < 53; i = i + 3) {
			if (action[i] != "" && action[i+2].indexOf("Reference!") == -1 && action[i+2] != "#") {
				testDate = action[i].indexOf(":") == -1 ? eval(new Date(action[i] + " " + thisHour + ":" + thisMinute + ":" + thisSecond)) : new Date(action[i]);
				testDate = Date.parse(testDate);
				fromDate = thisDate >= testDate ? true : false;
				if (action[i+1] == 0) {
					duration = thisDate >= testDate ? true : false;
				}
				else {
					duration = thisDate == testDate ? true : false;
				}
				if (fromDate && duration) {
					url = action[i+2];
				}
			}
		}
		if (action[1] == 0 && url != "") {
			var params = "";
			var topp = action[13], left = action[14];
			var timeOut = action[16] * 1000;
			if (action[2].length > 0) {
				windowName = action[2];
			}
			else {
				windowName = "newWindow";
			}
			var winWidth = (action[3] > 0 && action[3] <= screen.availWidth) ? action[3] : screen.availWidth;
			var winHeight = (action[4] > 0 && action[4] <= screen.availHeight) ? action[4] : screen.availHeight;
			params += "width=" + winWidth;
			params += ",height=" + winHeight;
			params += ",toolbar=" + (action[5] ? "1" : "0");
			params += ",location=" + (action[6] ? "1" : "0");
			params += ",directories=" + (action[7] ? "1" : "0");
			params += ",status=" + (action[8] ? "1" : "0");
			params += ",menubar=" + (action[9] ? "1" : "0");
			params += ",favorites=" + (action[10] ? "1" : "0");
			params += ",scrollbars=" + (action[11] ? "1" : "0");
			params += ",resizable=" + (action[12] ? "1" : "0");
			params += (window.screenY) ? ",screenY=" + topp + ",screenX=" + left : ",top=" + topp + ",left=" + left;
			DPNewWind = window.open(url,windowName,params);
			if (action[15]) {
				var t = setTimeout("DPCloseWind()", timeOut);
			}
		}
		else if (url != "") {
			var fparams;
			if (action[53].length < 1) {
				window.location.href = url;
			}
			else {
				fparams = eval(action[53] + ".window.location");
				fparams.href = url;
			}
		}
	}
	return;
}
function DPCloseWind() {
	if (DPisIE3) {
		DPNewWind = window.open(DPAction[2],windowName,params);
	}
	if (DPNewWind && !DPNewWind.closed) {
		DPNewWind.close();
	}
	return;
}
function DPVersion() {
	return (navigator.appName.indexOf("Netscape") >= 0 && parseInt(navigator.appVersion.charAt(0)) >= 3)
          || (navigator.appName.indexOf("Explorer") >= 0 && parseInt(navigator.appVersion.charAt(0)) >= 3);
}
// EOF
